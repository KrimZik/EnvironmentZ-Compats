for FILE in ${{ env.ZIP_FILES }}; do
  echo "Processing $FILE..."

  MOD_VERSION=$(echo "$FILE" | grep -oP 'EnvironmentZCompat-\K[\d]+\.[\d]+\.[\d]+(?=-)')
  MC_VERSION=$(echo "$FILE" | grep -oP '[\d]+\.[\d]+\.[\d]+(?=\.zip)')

  if [ -z "$MOD_VERSION" ] || [ -z "$MC_VERSION" ]; then
    echo "❌ ERROR: Failed to extract version numbers from $FILE"
    exit 1
  fi

  echo "✅ Extracted versions: Mod Version: $MOD_VERSION, Minecraft Version: $MC_VERSION"

  # Check if this version is already uploaded
  if echo "${{ env.EXISTING_VERSIONS }}" | grep -q "\"version_number\": \"$MOD_VERSION\""; then
    echo "⚠️ Skipping already uploaded version: $MOD_VERSION for Minecraft $MC_VERSION"
    continue
  fi

  # Extract file name without path
  FILE_NAME=$(basename "$FILE")

  # Ensure changelog is not empty
  CHANGELOG="${{ github.event.release.body }}"
  if [ -z "$CHANGELOG" ]; then
    CHANGELOG="No changelog provided."
  fi

  # Define dependencies array with EnvironmentZ as required
  DEPENDENCIES='[{"dependency_type": "required", "project_id": "environmentz"}]'

  # Prepare JSON metadata file
  JSON_PAYLOAD="release-assets/modrinth_metadata.json"
  echo '{
    "name": "Release '"$MOD_VERSION"'",
    "version_number": "'"$MOD_VERSION"'",
    "game_versions": ["'"$MC_VERSION"'"],
    "loaders": ["minecraft"],
    "version_type": "release",
    "project_id": "'"${{ secrets.MODRINTH_PROJECT_ID }}"'",
    "primary_file": "'"$FILE_NAME"'",
    "file_parts": ["'"$FILE_NAME"'"],
    "dependencies": '"$DEPENDENCIES"',
    "changelog": "'"$CHANGELOG"'"
  }' > "$JSON_PAYLOAD"

  # Upload to Modrinth with correctly formatted JSON
  echo "Uploading $FILE to Modrinth..."
  curl -X POST "https://api.modrinth.com/v2/version" \
    -H "Authorization: ${{ secrets.MODRINTH_API_KEY }}" \
    -H "Content-Type: multipart/form-data" \
    -F "data=@$JSON_PAYLOAD;type=application/json" \
    -F "primary_file=@$FILE"

  echo "✅ Successfully uploaded $FILE to Modrinth"
done
